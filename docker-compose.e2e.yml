services:
  postgres:
    image: postgres:15-alpine
    container_name: trading-postgres-e2e
    environment:
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: changeme
      POSTGRES_DB: trading_db
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U trading_user -d trading_db']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - trading-network

  redis:
    image: redis:7-alpine
    container_name: trading-redis-e2e
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - trading-network

  trading-api:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: production
    container_name: trading-api-e2e
    ports:
      - '8000:8000'
    environment:
      - DATABASE_URL=postgresql://trading_user:changeme@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=test
      - DEBUG=true
      - API_KEY_SECRET=dev-secret-key-change-in-production
      - RUN_MIGRATIONS=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
    command: uvicorn app.api.main:app --host 0.0.0.0 --port 8000

  arq-worker:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: production
    container_name: arq-worker-e2e
    environment:
      - DATABASE_URL=postgresql://trading_user:changeme@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=test
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trading-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    command: arq app.api.jobs.worker.WorkerSettings

networks:
  trading-network:
    driver: bridge
