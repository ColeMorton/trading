# Coverage configuration for trading system testing infrastructure
# Phase 3: Testing Infrastructure Consolidation

[run]
# Source code to measure
source =
    app/core
    app/api
    app/strategies
    app/tools
    app/concurrency
    app/portfolio_optimization
    app/trading_bot

# Include patterns
include =
    app/*

# Exclude patterns
omit =
    # Test files
    */tests/*
    */test_*
    *_test.py
    */conftest.py

    # Development and build files
    */build/*
    */dist/*
    */.eggs/*
    */venv/*
    */.venv/*
    */node_modules/*

    # Migrations and init files
    */migrations/*
    */__init__.py

    # Experimental and temporary files
    */experimental/*
    */temp/*
    */backup*

    # Frontend and static files
    app/frontend/*
    */static/*
    */templates/*

    # Configuration and setup files
    setup.py
    */config.py
    */settings.py

    # External dependencies
    */site-packages/*

    # Specific exclusions for this project
    app/api/mcp_server/*
    app/api/v1/*
    app/atr/*
    app/dip/*
    app/cost_basis/*
    app/rate_of_decay/*
    app/rsi/*
    app/histograms_series/*
    app/skfolio/*
    app/vectorbt/*
    app/utils.py

# Branch coverage
branch = True

# Parallel processing
parallel = True

# Coverage data file
data_file = .coverage

[report]
# Minimum coverage percentage to pass
fail_under = 80

# Precision for coverage percentages
precision = 1

# Show missing lines in report
show_missing = True

# Skip covered files in report
skip_covered = False

# Skip empty files
skip_empty = True

# Sort by name
sort = Name

# Exclude lines from coverage
exclude_lines =
    # Standard library exclusions
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if False:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

    # Type checking exclusions
    if TYPE_CHECKING:
    if typing.TYPE_CHECKING:

    # Platform specific code
    if platform.system()
    if sys.platform

    # Defensive code
    except ImportError:
    except ModuleNotFoundError:

    # Debug and logging
    logger\.debug
    print\(.*debug

    # Development helpers
    pass
    \.\.\.
    NotImplemented

[html]
# HTML report directory
directory = htmlcov

# Title for HTML report
title = Trading System Coverage Report

# Show contexts (requires Python 3.7+)
show_contexts = True

# Skip files with 100% coverage
skip_covered = False

# Skip empty files
skip_empty = True

# Extra CSS
extra_css =

[xml]
# XML report output
output = coverage.xml

[json]
# JSON report output
output = coverage.json

# Pretty print JSON
pretty_print = True

# Show contexts in JSON
show_contexts = True

[paths]
# Path mapping for different environments
source =
    app/
    /app/
    /Users/*/Projects/trading/app/
    /home/*/trading/app/
    /workspace/app/

[coverage:run]
# Dynamic context for more detailed coverage
dynamic_context = test_function

# Concurrency mode
concurrency =
    thread
    multiprocessing

# Include namespace packages
include_namespace_packages = True

[coverage:report]
# Additional formatting options
sort = Cover

# Show terminal output format
format = term-missing

[coverage:html]
# Additional HTML options
directory = htmlcov

# Show branch coverage in HTML
show_contexts = True

# Title
title = Trading System Test Coverage

[coverage:xml]
# XML-specific options
output = coverage.xml

[coverage:json]
# JSON-specific options
output = coverage.json
pretty_print = True
