name: E2E Tests

on:
  push:
    branches: [main]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  e2e-tests:
    name: E2E Tests (Full Stack)
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python & Poetry
        uses: ./.github/actions/setup-python-poetry

      - name: Start Docker Compose stack
        run: |
          docker compose -f docker-compose.e2e.yml up -d
          echo "⏳ Waiting for services to be healthy..."

      - name: Wait for API health
        run: |
          for i in {1..180}; do
            if curl -sf http://localhost:8000/health/ >/dev/null; then
              echo "✅ API is healthy"
              exit 0
            fi
            echo "Waiting for API... ($i/180)"
            sleep 1
          done
          echo "❌ API did not become healthy in time"
          docker compose -f docker-compose.e2e.yml logs
          exit 1

      - name: Verify service health
        run: |
          echo "🔍 Checking service health..."
          curl -v http://localhost:8000/health/detailed || true
          docker compose -f docker-compose.e2e.yml ps

      - name: Run E2E tests
        run: |
          poetry run pytest -m e2e \
            -v \
            --maxfail=5 \
            --tb=long \
            --color=yes \
            --junitxml=test-results/e2e-tests.xml
        timeout-minutes: 20

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results
          path: test-results/

      - name: Upload Docker logs on failure
        if: failure()
        run: |
          docker compose -f docker-compose.e2e.yml logs > docker-logs.txt

      - name: Upload Docker logs artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: docker-logs
          path: docker-logs.txt

      - name: Cleanup Docker stack
        if: always()
        run: |
          docker compose -f docker-compose.e2e.yml down -v
          docker system prune -f

      - name: Test Summary
        if: always()
        run: |
          echo "📊 E2E Test Summary"
          if [ -f test-results/e2e-tests.xml ]; then
            grep -oP 'tests="\K[0-9]+' test-results/e2e-tests.xml || echo "0 tests"
          fi
