name: Concurrency Module Tests

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '1.8.3'

on:
  push:
    branches: [main, develop]
    paths:
      - 'app/concurrency/**'
      - 'tests/concurrency/**'
      - '.github/workflows/concurrency_tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'app/concurrency/**'
      - 'tests/concurrency/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python with Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}
          dependency-groups: 'all'
          cache-key-suffix: 'concurrency'

      - name: Run unit tests
        run: |
          poetry run pytest tests/concurrency/ -v -m "unit" --tb=short -n auto

      - name: Run integration tests
        run: |
          poetry run pytest tests/concurrency/ -v -m "integration" --tb=short

      - name: Run error handling tests
        run: |
          poetry run pytest tests/concurrency/ -v -m "error_handling" --tb=short

      - name: Run coverage analysis
        run: |
          poetry run pytest tests/concurrency/ -v --cov=app/concurrency --cov-report=xml --cov-report=html --cov-report=term-missing

      - name: Upload test results and coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: concurrency-test-results
          path: |
            .coverage
            coverage.xml
            htmlcov/
            .pytest_cache/
          retention-days: 30

  performance:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python with Poetry
        uses: ./.github/actions/setup-python-poetry
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          poetry-version: ${{ env.POETRY_VERSION }}
          dependency-groups: 'all'
          cache-key-suffix: 'concurrency-perf'

      - name: Run performance tests
        run: |
          poetry run pytest tests/concurrency/ -v -m "performance" --tb=short --benchmark-only

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: concurrency-performance-results
          path: |
            .pytest_cache/
            .benchmarks/
          retention-days: 90

      - name: Generate performance summary
        if: github.event_name == 'pull_request'
        run: |
          echo "## ðŸš€ Concurrency Performance Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Performance tests completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "See artifacts for detailed benchmark results." >> $GITHUB_STEP_SUMMARY
