name: 'Setup Python with Poetry'
description: 'Composite action to set up Python, Poetry, and dependencies with intelligent caching'
# IMPORTANT: This is the single source of truth for Poetry version in GitHub Actions
# Default versions must match .versions file at repository root
inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  poetry-version:
    description: 'Poetry version to install (default matches .versions file)'
    required: false
    default: '1.8.3'
  install-dependencies:
    description: 'Whether to install dependencies'
    required: false
    default: 'true'
  dependency-groups:
    description: 'Dependency groups to install (main, dev, all)'
    required: false
    default: 'all'
  cache-key-suffix:
    description: 'Additional suffix for cache key'
    required: false
    default: ''

outputs:
  cache-hit:
    description: 'Whether cache was hit'
    value: ${{ steps.cache-deps.outputs.cache-hit }}
  python-version:
    description: 'Python version installed'
    value: ${{ steps.setup-python.outputs.python-version }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache Poetry installation
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ inputs.poetry-version }}-${{ runner.os }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ inputs.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Cache dependencies
      id: cache-deps
      if: inputs.install-dependencies == 'true'
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ inputs.dependency-groups }}-${{ inputs.cache-key-suffix }}
        restore-keys: |
          venv-${{ runner.os }}-${{ inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ inputs.dependency-groups }}-
          venv-${{ runner.os }}-${{ inputs.python-version }}-

    - name: Install dependencies
      if: inputs.install-dependencies == 'true' && steps.cache-deps.outputs.cache-hit != 'true'
      shell: bash
      run: |
        if [ "${{ inputs.dependency-groups }}" = "main" ]; then
          poetry install --no-interaction --only main
        elif [ "${{ inputs.dependency-groups }}" = "dev" ]; then
          poetry install --no-interaction --only dev
        else
          poetry install --no-interaction
        fi
